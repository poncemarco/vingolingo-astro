---
import { fetchCategories, fetchItems } from "@/services/items";
import Layout from "@/layouts/Layout.astro";
import SectionTitle from "@/components/ui/text/SectionTitle.astro";
import Pagination from "@/components/ui/pagination/Pagination.astro";
import CardCatalog from "@/components/ui/cards/CardCatalog";
import { type Image } from '@/types/images';
import { type Category } from '@/types/categories';
import type { Datum } from '@/types/items';


export async function getStaticPaths({ paginate }: { paginate: any }) {
  const categoriesJson = await fetchCategories();
  const categories = categoriesJson.map((category) => category.name.toLowerCase());
  const items = await fetchItems({ paginate: false });
  
  return categories.flatMap((tag) => {
    // const filteredPosts = await fetchItems();
    const filteredPosts = items.filter((item : Datum) => item.category.toLowerCase() === tag);
    return paginate(filteredPosts, {
      params: {tag},
      pageSize: 12
    });
  });
}
let items : any;
const { page } = Astro.props;
const params = Astro.params;

export const prerender = true;
const { data, url, currentPage, total, size } = page;
if (!data) {
    throw new Error("No data");
}
items = data
const { prev, next } = url;
---

<Layout title="Muuch Maaya">
	<SectionTitle 
	title={`CategorÃ­a: ${params.tag}`}
	description=`${total} productos disponibles`
	/>
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
      {items.map(({id, name, price, image, category, unit}: {id:string, name: string, price: number, image: Image, category: string, unit: string}) => (
        <CardCatalog 
          client:visible
          id={id}
          name={name}
          price={price}
          image={image}
          unit={unit}
          category={category}
          slug={`/producto/${id}`}
        />
      ))}
    </div>
  </div>
	<div class="mt-12 grid place-content-center dark:text-gray-200"> <!-- Cambiado a 5 columnas -->
        <Pagination
          firstPage={prev ? '/catorias/listas' : null}
          previousPage={prev ? prev : null}
          nextPage={next ? next : null}
          lastPage={next ? `/catalogo/${Math.round(total / size)}` : null}
          currentPage={currentPage}
          totalPages={Math.round(total / size)}
        />
      </div>
</Layout>